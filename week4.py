# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Design.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowTitle("F1D022072 - Muhammad Fajar Maulana")
        MainWindow.resize(600, 400)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.layout = QtWidgets.QVBoxLayout(self.centralwidget)

        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setContentsMargins(10, 10, 10, 10)

        self.productLabel = QtWidgets.QLabel("Product")
        self.comboBox = QtWidgets.QComboBox()
        self.products = {
            "Minyak Kita 750 ml": 15000,
            "Beras Bulog 5 kg": 60000,
            "Kecap Wakanda": 20000,
            "Gula Hytam 1 kg": 18000
        }
        self.comboBox.addItem("Pilih Produk", None)
        for product, price in self.products.items():
            self.comboBox.addItem(f"{product} (Rp. {price:,.0f})", product)

        self.formLayout.addRow(self.productLabel, self.comboBox)

        self.quantityLabel = QtWidgets.QLabel("Quantity")
        self.quantityLineEdit = QtWidgets.QLineEdit()
        self.quantityLineEdit.setFixedWidth(100)
        self.formLayout.addRow(self.quantityLabel, self.quantityLineEdit)

        self.discountLabel = QtWidgets.QLabel("Discount")
        self.comboBox_2 = QtWidgets.QComboBox()
        self.comboBox_2.addItems(["0%", "5%", "10%", "15%"])
        self.formLayout.addRow(self.discountLabel, self.comboBox_2)
        self.layout.addLayout(self.formLayout)
        self.buttonLayout = QtWidgets.QHBoxLayout()
        self.pushButton = QtWidgets.QPushButton("Add to Cart")
        self.pushButton_2 = QtWidgets.QPushButton("Clear")
        self.buttonLayout.addWidget(self.pushButton)
        self.buttonLayout.addWidget(self.pushButton_2)
        self.layout.addLayout(self.buttonLayout)

        self.listWidget = QtWidgets.QListWidget()
        self.layout.addWidget(self.listWidget)

        self.totalLayout = QtWidgets.QHBoxLayout()
        self.totalLabel = QtWidgets.QLabel("Total: Rp. 0")
        self.totalLabel.setStyleSheet("font-weight: ")
        self.errorLabel = QtWidgets.QLabel("")
        self.errorLabel.setStyleSheet("color: red; font-weight: ")
        self.totalLayout.addWidget(self.totalLabel)
        self.totalLayout.addWidget(self.errorLabel)
        self.layout.addLayout(self.totalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.pushButton.clicked.connect(self.add_to_cart)
        self.pushButton_2.clicked.connect(self.clear_cart)

        self.total_price = 0

    def add_to_cart(self):
        product_text = self.comboBox.currentText()
        product = self.comboBox.currentData()
        quantity = self.quantityLineEdit.text()
        discount_text = self.comboBox_2.currentText()

        if not product or not quantity.isdigit():
            self.errorLabel.setText("Invalid Input")
            return

        quantity = int(quantity)
        price = self.products.get(product, 0) * quantity
        discount = int(discount_text.replace("%", "")) if discount_text else 0
        final_price = price - (price * discount / 100)

        self.listWidget.addItem(f"{product_text} - {quantity} x Rp. {self.products[product]:,.0f} (disc {discount}%)")
        self.total_price += final_price
        self.totalLabel.setText(f"Total: Rp. {self.total_price:,.0f}")
        self.errorLabel.setText("")

    def clear_cart(self):
        self.listWidget.clear()
        self.total_price = 0
        self.totalLabel.setText("Total: Rp. 0")
        self.errorLabel.setText("")
        self.comboBox.setCurrentIndex(0)
        self.comboBox_2.setCurrentIndex(0)
        self.quantityLineEdit.clear()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
